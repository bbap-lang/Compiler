if(1<0 && 2>1){
    printLine("Hello Word 1!");
    let test = test(5);
}

enum TestEnum: string{
    test1 = "One",
    test2 = "Two",
    test3 = "Three"
}

let testEnumValue1 = TestEnum::test1;
let testEnumValue2 = TestEnum::test2;
let testEnumValue3 = TestEnum::test3;

alias number: int;

public alias text: string;

let textTest: text = "Hello World!";

let vbakTable: Table<VBAK>;


struct TestType{
    field1: int,
    field2: int
}

extend TestType{
    func testFunc(){
        printLine(this.field1);
    }
    
    static func staticTestFunc(){
        printLine("Static test");
    }
}

let testvar: TestType;


TestType::staticTestFunc();

testVar = new TestType{
    field1 = 1,
    field2 = 2
}

let testTable: Table<TestType>;
let testTable2: Table<TestType>;

testTable2 = SELECT testTable.field1, testTable.field2 
                FROM testTable 
                WHERE testTable.field1 == testvar.field1
                ORDER BY testTable.field1
                LIMIT 10;

let testNumber123 = testvar.field2;

let hello: string = "Hello ";
let world = "World!";

let testChar: char[10] = world.toCharArray();
let charTest2: char[20] = "Hello World!";

let helloWorld = hello + world;
let num: number = 0xff;
let num2 = 0b10110101;
let test = helloWorld + num * 5; 

let negativeNum = -num;

let test2 = num == 0;

let notExpression = !test2;

let asgvsadf: string = "Hello";

let sdfgubi = helloWorld == num2 && true;

let lknksdxfv = sdfgubi;

if sdfgubi{
    printLine("Is True!");
}

if num < 100{
    printLine("Is True!");
}

while sdfgubi{
    printLine("Is True!");
}


for(let i = 0; i < 20; i++;){
    let test2 = "test";
    printLine("Hello Word 2!");
}

while num < 10{
    printLine("While loop!");
}


if num < 1 {
    printLine("Hello Word 1!");
} else if num > 5 {
    printLine("Hello Word 2!");
} else {
     printLine("Hello Word 3!");
}

let returnOne: long;
let returnTwo: int;

(returnOne, returnTwo) = test2(5);

let (declareReturnOne, declareReturnTwo) = test2(5);


func test(param1: int): (int){
    return 1;
}

func test2(param1: int): (long, int){
    let hi = "Hi!";
    
    return (1, 0);
}

let selected_vbeln: TABLE<VBELN_VA>;

selected_vbeln = SELECT vbak.vbeln 
        FROM VBAK
        WHERE vbak.vbeln == "123";
        
if(returnOne == 1){
    printLine("Hello Word 1!");
}

test(0);

let testI = 0;

while true{
    testI++;
    
    if(testI == 10){
        break;
    }
}